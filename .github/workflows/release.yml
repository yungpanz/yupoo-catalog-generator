name: Release

on:
  create:
    types: [tag]

jobs:
  build-macos:
    runs-on: macOS-latest
    steps:
      # Build and compile the Python application using PyInstaller
      - name: Build application
        uses: actions/python-package@v1
        with:
          python-version: 3.8
          command: python setup.py build_exe
      
      # Create a new release
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          
      # Upload the compiled application as an asset to the release
      - name: Upload compiled application
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Yupo-Catalog-Generator.app
          asset_name: Yupo-Catalog-Generator-macOS
          asset_content_type: application/octet-stream
          
  build-windows:
    runs-on: windows-latest
    steps:
      # Build and compile the Python application using PyInstaller
      - name: Build application
        uses: actions/python-package@v1
        with:
          python-version: 3.8
          command: python setup.py build_exe
      
      # Create a new release
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          
      # Upload the compiled application as an asset to the release
      - name: Upload compiled application
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Yupo-Catalog-Generator.exe
          asset_name: Yupo-Catalog-Generator-windows
          asset_content_type: application/octet-stream
          
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      # Build and compile the Python application using PyInstaller
      - name: Build application
        uses: actions/python-package@v1
        with:
          python-version: 3.8
          command: python setup.py build_exe
      
      # Create a new release
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          
      # Upload the compiled application as an asset to the release
      - name: Upload compiled application
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Yupo-Catalog-Generator
          asset_name: Yupo-Catalog-Generator-linux
          asset_content_type: application/octet-stream
